// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/rule/v1/dto_rule.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SelectField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr  string `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Alias string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *SelectField) Reset() {
	*x = SelectField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectField) ProtoMessage() {}

func (x *SelectField) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectField.ProtoReflect.Descriptor instead.
func (*SelectField) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{0}
}

func (x *SelectField) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *SelectField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SelectField) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type ConfigStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSelectFlag   bool `protobuf:"varint,1,opt,name=data_select_flag,json=dataSelectFlag,proto3" json:"data_select_flag,omitempty"`
	DataDispatchFlag bool `protobuf:"varint,2,opt,name=data_dispatch_flag,json=dataDispatchFlag,proto3" json:"data_dispatch_flag,omitempty"`
	DataErrorFlag    bool `protobuf:"varint,3,opt,name=data_error_flag,json=dataErrorFlag,proto3" json:"data_error_flag,omitempty"`
}

func (x *ConfigStatus) Reset() {
	*x = ConfigStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigStatus) ProtoMessage() {}

func (x *ConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigStatus.ProtoReflect.Descriptor instead.
func (*ConfigStatus) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigStatus) GetDataSelectFlag() bool {
	if x != nil {
		return x.DataSelectFlag
	}
	return false
}

func (x *ConfigStatus) GetDataDispatchFlag() bool {
	if x != nil {
		return x.DataDispatchFlag
	}
	return false
}

func (x *ConfigStatus) GetDataErrorFlag() bool {
	if x != nil {
		return x.DataErrorFlag
	}
	return false
}

//Rule create.
type RuleCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type   uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *RuleCreateReq) Reset() {
	*x = RuleCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleCreateReq) ProtoMessage() {}

func (x *RuleCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleCreateReq.ProtoReflect.Descriptor instead.
func (*RuleCreateReq) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{2}
}

func (x *RuleCreateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RuleCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RuleCreateReq) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RuleCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type      uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Status    uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RuleCreateResp) Reset() {
	*x = RuleCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleCreateResp) ProtoMessage() {}

func (x *RuleCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleCreateResp.ProtoReflect.Descriptor instead.
func (*RuleCreateResp) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{3}
}

func (x *RuleCreateResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleCreateResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleCreateResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RuleCreateResp) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RuleCreateResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RuleCreateResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RuleCreateResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type      uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Status    uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{4}
}

func (x *Rule) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Rule) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Rule) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Rule) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Rule) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//rule update
type RuleUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *RuleUpdateReq) Reset() {
	*x = RuleUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleUpdateReq) ProtoMessage() {}

func (x *RuleUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleUpdateReq.ProtoReflect.Descriptor instead.
func (*RuleUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{5}
}

func (x *RuleUpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleUpdateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RuleUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type RuleUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type      uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Status    uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RuleUpdateResp) Reset() {
	*x = RuleUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleUpdateResp) ProtoMessage() {}

func (x *RuleUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleUpdateResp.ProtoReflect.Descriptor instead.
func (*RuleUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{6}
}

func (x *RuleUpdateResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleUpdateResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleUpdateResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RuleUpdateResp) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RuleUpdateResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RuleUpdateResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RuleUpdateResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//rule delete.
type RuleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RuleDeleteReq) Reset() {
	*x = RuleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleDeleteReq) ProtoMessage() {}

func (x *RuleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleDeleteReq.ProtoReflect.Descriptor instead.
func (*RuleDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{7}
}

func (x *RuleDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleDeleteReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RuleDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RuleDeleteResp) Reset() {
	*x = RuleDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleDeleteResp) ProtoMessage() {}

func (x *RuleDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleDeleteResp.ProtoReflect.Descriptor instead.
func (*RuleDeleteResp) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{8}
}

//rule delete.
type RuleGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RuleGetReq) Reset() {
	*x = RuleGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleGetReq) ProtoMessage() {}

func (x *RuleGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleGetReq.ProtoReflect.Descriptor instead.
func (*RuleGetReq) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{9}
}

func (x *RuleGetReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleGetReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//rule query
type RuleQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int32    `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderBy      string   `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	IsDescending bool     `protobuf:"varint,4,opt,name=is_descending,json=isDescending,proto3" json:"is_descending,omitempty"`
	KeyWords     string   `protobuf:"bytes,5,opt,name=key_words,json=keyWords,proto3" json:"key_words,omitempty"`
	SearchKey    string   `protobuf:"bytes,6,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	Id           *Uint64  `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Ids          []string `protobuf:"bytes,8,rep,name=ids,proto3" json:"ids,omitempty"`
	Name         *String  `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Type         *Uint32  `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Status       *Uint32  `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RuleQueryReq) Reset() {
	*x = RuleQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleQueryReq) ProtoMessage() {}

func (x *RuleQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleQueryReq.ProtoReflect.Descriptor instead.
func (*RuleQueryReq) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{10}
}

func (x *RuleQueryReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *RuleQueryReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RuleQueryReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *RuleQueryReq) GetIsDescending() bool {
	if x != nil {
		return x.IsDescending
	}
	return false
}

func (x *RuleQueryReq) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *RuleQueryReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *RuleQueryReq) GetId() *Uint64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RuleQueryReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RuleQueryReq) GetName() *String {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *RuleQueryReq) GetType() *Uint32 {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *RuleQueryReq) GetStatus() *Uint32 {
	if x != nil {
		return x.Status
	}
	return nil
}

type RuleQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  int32   `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	LastPage uint64  `protobuf:"varint,3,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
	PageSize int32   `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     []*Rule `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RuleQueryResp) Reset() {
	*x = RuleQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleQueryResp) ProtoMessage() {}

func (x *RuleQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleQueryResp.ProtoReflect.Descriptor instead.
func (*RuleQueryResp) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{11}
}

func (x *RuleQueryResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RuleQueryResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *RuleQueryResp) GetLastPage() uint64 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *RuleQueryResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RuleQueryResp) GetData() []*Rule {
	if x != nil {
		return x.Data
	}
	return nil
}

type RuleStatusSwitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RuleStatusSwitchReq) Reset() {
	*x = RuleStatusSwitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleStatusSwitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleStatusSwitchReq) ProtoMessage() {}

func (x *RuleStatusSwitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleStatusSwitchReq.ProtoReflect.Descriptor instead.
func (*RuleStatusSwitchReq) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{12}
}

func (x *RuleStatusSwitchReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleStatusSwitchReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RuleStatusSwitchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RuleStatusSwitchResp) Reset() {
	*x = RuleStatusSwitchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rule_v1_dto_rule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleStatusSwitchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleStatusSwitchResp) ProtoMessage() {}

func (x *RuleStatusSwitchResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rule_v1_dto_rule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleStatusSwitchResp.ProtoReflect.Descriptor instead.
func (*RuleStatusSwitchResp) Descriptor() ([]byte, []int) {
	return file_api_rule_v1_dto_rule_proto_rawDescGZIP(), []int{13}
}

func (x *RuleStatusSwitchResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleStatusSwitchResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_api_rule_v1_dto_rule_proto protoreflect.FileDescriptor

var file_api_rule_v1_dto_rule_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x74,
	0x6f, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4b, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x78, 0x70, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x22,
	0x64, 0x0a, 0x0d, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6,
	0xe9, 0x97, 0xb4, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6,
	0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xce, 0x01, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97,
	0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0,
	0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x60, 0x0a, 0x0d, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97,
	0xb4, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6,
	0xe9, 0x97, 0xb4, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38,
	0x0a, 0x0d, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x35, 0x0a, 0x0a, 0x52, 0x75,
	0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xe4, 0x03, 0x0a, 0x0c, 0x52, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x13, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x50, 0x61,
	0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0a, 0x32, 0x08, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x62, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x3a, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x15, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0f, 0x32, 0x0d,
	0x49, 0x73, 0x20, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x69,
	0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0xe0, 0x41, 0x01, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4b, 0x65, 0x79, 0x20, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20,
	0x4b, 0x65, 0x79, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x20,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41, 0x02, 0x92, 0x41,
	0x07, 0x32, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x13, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x2e, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4c, 0x61, 0x73, 0x74,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x13, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x3e, 0x0a, 0x14, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x32, 0x98, 0x04, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x0a,
	0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x11, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x06, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x57, 0x0a, 0x0a, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x1a, 0x0b, 0x2f, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x54, 0x0a, 0x0a, 0x52, 0x75, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x2a, 0x0b, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x44, 0x0a, 0x07, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4c, 0x0a, 0x09, 0x52, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x78, 0x0a, 0x10, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1a,
	0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x3d, 0x0a,
	0x08, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69, 0x6f,
	0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_rule_v1_dto_rule_proto_rawDescOnce sync.Once
	file_api_rule_v1_dto_rule_proto_rawDescData = file_api_rule_v1_dto_rule_proto_rawDesc
)

func file_api_rule_v1_dto_rule_proto_rawDescGZIP() []byte {
	file_api_rule_v1_dto_rule_proto_rawDescOnce.Do(func() {
		file_api_rule_v1_dto_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_rule_v1_dto_rule_proto_rawDescData)
	})
	return file_api_rule_v1_dto_rule_proto_rawDescData
}

var file_api_rule_v1_dto_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_rule_v1_dto_rule_proto_goTypes = []interface{}{
	(*SelectField)(nil),          // 0: api.rule.SelectField
	(*ConfigStatus)(nil),         // 1: api.rule.ConfigStatus
	(*RuleCreateReq)(nil),        // 2: api.rule.RuleCreateReq
	(*RuleCreateResp)(nil),       // 3: api.rule.RuleCreateResp
	(*Rule)(nil),                 // 4: api.rule.Rule
	(*RuleUpdateReq)(nil),        // 5: api.rule.RuleUpdateReq
	(*RuleUpdateResp)(nil),       // 6: api.rule.RuleUpdateResp
	(*RuleDeleteReq)(nil),        // 7: api.rule.RuleDeleteReq
	(*RuleDeleteResp)(nil),       // 8: api.rule.RuleDeleteResp
	(*RuleGetReq)(nil),           // 9: api.rule.RuleGetReq
	(*RuleQueryReq)(nil),         // 10: api.rule.RuleQueryReq
	(*RuleQueryResp)(nil),        // 11: api.rule.RuleQueryResp
	(*RuleStatusSwitchReq)(nil),  // 12: api.rule.RuleStatusSwitchReq
	(*RuleStatusSwitchResp)(nil), // 13: api.rule.RuleStatusSwitchResp
	(*Uint64)(nil),               // 14: api.rule.Uint64
	(*String)(nil),               // 15: api.rule.String
	(*Uint32)(nil),               // 16: api.rule.Uint32
}
var file_api_rule_v1_dto_rule_proto_depIdxs = []int32{
	14, // 0: api.rule.RuleQueryReq.id:type_name -> api.rule.Uint64
	15, // 1: api.rule.RuleQueryReq.name:type_name -> api.rule.String
	16, // 2: api.rule.RuleQueryReq.type:type_name -> api.rule.Uint32
	16, // 3: api.rule.RuleQueryReq.status:type_name -> api.rule.Uint32
	4,  // 4: api.rule.RuleQueryResp.data:type_name -> api.rule.Rule
	2,  // 5: api.rule.Rules.RuleCreate:input_type -> api.rule.RuleCreateReq
	5,  // 6: api.rule.Rules.RuleUpdate:input_type -> api.rule.RuleUpdateReq
	7,  // 7: api.rule.Rules.RuleDelete:input_type -> api.rule.RuleDeleteReq
	9,  // 8: api.rule.Rules.RuleGet:input_type -> api.rule.RuleGetReq
	10, // 9: api.rule.Rules.RuleQuery:input_type -> api.rule.RuleQueryReq
	12, // 10: api.rule.Rules.RuleStatusSwitch:input_type -> api.rule.RuleStatusSwitchReq
	3,  // 11: api.rule.Rules.RuleCreate:output_type -> api.rule.RuleCreateResp
	6,  // 12: api.rule.Rules.RuleUpdate:output_type -> api.rule.RuleUpdateResp
	8,  // 13: api.rule.Rules.RuleDelete:output_type -> api.rule.RuleDeleteResp
	4,  // 14: api.rule.Rules.RuleGet:output_type -> api.rule.Rule
	11, // 15: api.rule.Rules.RuleQuery:output_type -> api.rule.RuleQueryResp
	13, // 16: api.rule.Rules.RuleStatusSwitch:output_type -> api.rule.RuleStatusSwitchResp
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_rule_v1_dto_rule_proto_init() }
func file_api_rule_v1_dto_rule_proto_init() {
	if File_api_rule_v1_dto_rule_proto != nil {
		return
	}
	file_api_rule_v1_wrappers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_rule_v1_dto_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleStatusSwitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rule_v1_dto_rule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleStatusSwitchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_rule_v1_dto_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_rule_v1_dto_rule_proto_goTypes,
		DependencyIndexes: file_api_rule_v1_dto_rule_proto_depIdxs,
		MessageInfos:      file_api_rule_v1_dto_rule_proto_msgTypes,
	}.Build()
	File_api_rule_v1_dto_rule_proto = out.File
	file_api_rule_v1_dto_rule_proto_rawDesc = nil
	file_api_rule_v1_dto_rule_proto_goTypes = nil
	file_api_rule_v1_dto_rule_proto_depIdxs = nil
}

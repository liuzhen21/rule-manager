syntax = "proto3";

package dto;
import "wrappers.proto";




service Actions {
    rpc ActionCreate(ActionCreateReq) returns (ActionCreateResp);
    rpc ActionUpdate(ActionUpdateReq) returns (ActionUpdateResp);
    rpc ActionDelete(ActionDeleteReq) returns (ActionDeleteResp);
    rpc ActionQuery(ActionQueryReq) returns (ActionQueryResp);
    rpc ActionVerify(ActionVerifyReq) returns (ActionVerifyResp);
    //set action status
    rpc ActionStatus (ActionStatusReq) returns (ActionStatusResp);
}

// Id              string      `sql:"id,type:varchar(255), notnull, unique"`
// UserId          string      `sql:"user_id,type:varchar(255)"`
// RuleId          string      `sql:"rule_id,type:varchar(255), notnull"`
// Name            string      `sql:"name,type:varchar(255), notnull"`
// Configuration   interface{} `sql:"configuration, notnull"`
// ActionType      string       `sql:"action_type, notnull"`
// ErrorActionFlag bool        `sql:"error_action_flag"`
// TableName       struct{}    `sql:"iot_mdmp_actions"`


message Action {
    string id = 1;
    string user_id =2;
    string rule_id = 3;
    string sink_id = 4;
    string name = 5;
    bytes configuration = 6;
    string action_type = 7;
    bool error_action_flag = 8;
    bool config_status = 9;
    string status = 10;
    int64 create_time = 11;
    int64 update_time = 12;
}



message ActionCreate {
    string id = 1;
    string user_id =2;
    string rule_id = 3;
    string name = 4;
   bytes configuration = 5;
    string action_type = 6;
    bool error_action_flag = 7;
    string sink_id = 8;
    int32 iot_user_privilege = 9;
}
//create.
message ActionCreateReq {
    repeated ActionCreate actions= 1;
}
message ActionCreateResp {
    repeated string ids = 1;
}
//update
message ActionUpdateReq {
    string id = 1;
    string user_id =2;
    String rule_id = 3;
    String name = 4;
    bytes configuration = 5;
    String action_type = 6;
    Bool error_action_flag = 7;
    String sink_id = 8;
}

message ActionUpdateResp {
    string id = 1;
}

//delete 
message ActionDeleteReq {
    string id = 1;              
    string rule_id = 2;         
    string user_id = 3;
}

message ActionDeleteResp {
}

//query
message ActionQueryReq {
    String id = 1;
    repeated string ids = 2;
    String rule_id = 4;
    String name = 5;
    //map<string, string> configuration =65;
    String action_type = 7;
    Bool error_action_flag = 8;
    Pager page = 9;
    String search_key = 10;
    String sink_id = 11;
    Bool status = 12;

    //user_id as a conditions.
    string user_id = 14;
}

message ActionQueryResp {
    int32 total = 1;
    repeated Action actions = 2;
}

//verify
message ActionVerifyReq {
    string id = 1;
    string user_id = 2;
    string rule_id = 3;
}
message ActionVerifyResp {}

message ActionStatusReq{
    string action_id = 1;
    string user_id = 2;
    string status = 3;
}

message ActionStatusResp{
}